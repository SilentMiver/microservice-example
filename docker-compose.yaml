version: '3.8'

services:
  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: employee_db
    ports:
      - "5432:5432"

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: PgAdmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "8081:80"
    depends_on:
      - postgres

  redis:
    image: redis/redis-stack:latest
    container_name: RedisStack
    ports:
      - "6379:6379"
      - "8001:8001"

  rabbitmq:
    image: rabbitmq:management
    container_name: RabbitMQ
    ports:
      - "5672:5672"
      - "15672:15672"
    restart: always

  domain:
    build:
      context: ./domain
      dockerfile: Dockerfile
    #image: kottzi/domain:latest
    pull_policy: always
    container_name: DomainService
    ports:
      - "8082:8082"
      - "50051:50051"
    environment:
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      # - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/products
      # - SPRING_DATASOURCE_USERNAME=admin
      # - SPRING_DATASOURCE_PASSWORD=admin
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
      - GRPC_SERVER_PORT=50051
    depends_on:
      - postgres
      - rabbitmq
      - redis

  # gateway:
  #   build:
  #     context: ./gateway
  #     dockerfile: Dockerfile
  #   image: kottzi/gateway:latest
  #   pull_policy: always
  #   container_name: GatewayService
  #   ports:
  #     - "8080:8080"
  #   volumes:
  #     - ./logstash/logs/application.log:/app/logs/application.log
  #   environment:
  #     - RABBITMQ_HOST=rabbitmq
  #     - RABBITMQ_PORT=5672
  #     - REDIS_HOST=redis
  #     - REDIS_PORT=6379
  #     - GRPC_SERVER_HOST=domain
  #     - GRPC_SERVER_PORT=50051
  #   depends_on:
  #     - domain

  # prometheus:
  #   image: prom/prometheus:latest
  #   container_name: Prometheus
  #   volumes:
  #     - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
  #   ports:
  #     - "9090:9090"
  #   depends_on:
  #     - gateway

  # grafana:
  #   image: grafana/grafana:latest
  #   container_name: Grafana
  #   ports:
  #     - "3000:3000"
  #   volumes:
  #     - ./grafana/provisioning:/etc/grafana/provisioning
  #   environment:
  #     - GF_SECURITY_ADMIN_USER=admin
  #     - GF_SECURITY_ADMIN_PASSWORD=admin
  #   depends_on:
  #     - prometheus

  # elasticsearch:
  #   image: elasticsearch:7.9.3
  #   container_name: ElasticSearch
  #   environment:
  #     - discovery.type=single-node
  #     - xpack.security.enabled=false
  #   ports:
  #     - "9200:9200"

  # logstash:
  #   image: logstash:7.9.3
  #   container_name: Logstash
  #   volumes:
  #     - ./logstash/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
  #     - ./logstash/logs/application.log:/app/logs/application.log
  #   depends_on:
  #     - elasticsearch
  #   ports:
  #     - "5044:5044"
  #     - "5000:5000"
  #     - "9600:9600"

  # kibana:
  #   image: kibana:7.9.3
  #   container_name: Kibana
  #   environment:
  #     - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
  #   ports:
  #     - "5601:5601"
  #   depends_on:
  #     - elasticsearch
